// <auto-generated />
using System;
using ComputerStore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ComputerStore.Migrations
{
    [DbContext(typeof(StoreContext))]
    partial class StoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ComputerStore.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Ноутбуки"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Мобільні телефони"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Комп'ютерні миші"
                        });
                });

            modelBuilder.Entity("ComputerStore.Models.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProductId"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1L,
                            CategoryId = 1,
                            Description = "Екран 15.6” IPS (1920x1080) Full HD, матовий/AMD Ryzen 5 3500U (2.1 — 3.7 ГГц)/RAM 8 ГБ/SSD 512 ГБ/AMD Radeon Vega 8 Graphics/без ОД/LAN/Wi-Fi/Bluetooth/вебкамера/Windows 10 Pro 64bit/1.74 кг/сірий",
                            Name = "HP 255 G8 (2W1E7EA) Asteroid Silver",
                            Price = 32599m
                        },
                        new
                        {
                            ProductId = 2L,
                            CategoryId = 1,
                            Description = "Екран 14\" IPS (1920x1080) Full HD, матовий / Intel Core i3-1125G4 (2.0 — 3.7 ГГц) / RAM 8 ГБ / SSD 512 ГБ / Intel UHD Graphics / без ОД / Wi-Fi / Bluetooth / вебкамера / Windows 10 Home 64 bit / 1.41 кг / сріблястий",
                            Name = "HP Pavilion 14-dv0047ua (4A7L9EA) Natural Silver",
                            Price = 36055m
                        },
                        new
                        {
                            ProductId = 3L,
                            CategoryId = 2,
                            Description = "Екран (6.4\", Super AMOLED, 2400x1080) / MediaTek Helio G80(2.0 ГГц + 1.8 ГГц) / основна квадрокамера: 64 Мп + 8 Мп + 2 Мп + 2 Мп, фронтальна камера: 20 Мп / RAM 6 ГБ / 128 ГБ вбудованої пам'яті + microSD (до 1 ТБ) / 3G / LTE / GPS / підтримка 2 SIM-карток (Nano-SIM) / Android 11 / 5000 мА·год",
                            Name = "Samsung Galaxy M32 6/128 GB Light Blue (SM-M325FLBGSEK)",
                            Price = 8555m
                        },
                        new
                        {
                            ProductId = 4L,
                            CategoryId = 3,
                            Description = "Під'єднання Бездротове / Розмір миші Маленька / Особливості Для обох рук (симетричний дизайн) / Сумісність з ОС Mac OS, Microsoft Windows",
                            Name = "Logitech M185 Wireless Blue (910-002239/910-002236)",
                            Price = 8555m
                        });
                });

            modelBuilder.Entity("ComputerStore.Models.Purchase", b =>
                {
                    b.Property<int>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Person")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<long>("ProductId1")
                        .HasColumnType("bigint");

                    b.HasKey("PurchaseId");

                    b.HasIndex("ProductId1");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("ComputerStore.Models.Product", b =>
                {
                    b.HasOne("ComputerStore.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ComputerStore.Models.Purchase", b =>
                {
                    b.HasOne("ComputerStore.Models.Product", "Product")
                        .WithMany("Purchases")
                        .HasForeignKey("ProductId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ComputerStore.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ComputerStore.Models.Product", b =>
                {
                    b.Navigation("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
